name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-gnu]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross --locked
      - name: Build
        run: cross build --release --target ${{ matrix.target }}
      - name: Strip
        if: matrix.target != 'x86_64-pc-windows-gnu'
        run: strip target/${{ matrix.target }}/release/rusty-ledger
      - name: Package
        id: package
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          name=rusty-ledger-${{ github.ref_name }}-${{ matrix.target }}
          bin=target/${{ matrix.target }}/release
          if [[ "${{ matrix.target }}" == 'x86_64-pc-windows-gnu' ]]; then
            cp "$bin/rusty-ledger.exe" "$name.exe"
            7z a "dist/$name.zip" "$name.exe"
            sha256sum "dist/$name.zip" > "dist/$name.zip.sha256"
            echo "archive=dist/$name.zip" >> "$GITHUB_OUTPUT"
            echo "checksum=dist/$name.zip.sha256" >> "$GITHUB_OUTPUT"
          else
            cp "$bin/rusty-ledger" "$name"
            tar czf "dist/$name.tar.gz" "$name"
            sha256sum "dist/$name.tar.gz" > "dist/$name.tar.gz.sha256"
            echo "archive=dist/$name.tar.gz" >> "$GITHUB_OUTPUT"
            echo "checksum=dist/$name.tar.gz.sha256" >> "$GITHUB_OUTPUT"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ steps.package.outputs.archive }}
            ${{ steps.package.outputs.checksum }}

  crate:
    name: Package Crate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build crate package
        run: cargo package --allow-dirty --no-verify
      - uses: actions/upload-artifact@v4
        with:
          name: crate
          path: target/package/*.crate

  release:
    name: Publish Release
    needs: [build, crate]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - uses: softprops/action-gh-release@v1
        with:
          files: dist/**
          generate_release_notes: true
